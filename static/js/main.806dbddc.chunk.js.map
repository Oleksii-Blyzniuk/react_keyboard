{"version":3,"sources":["App.tsx","index.tsx"],"names":["App","state","pushed","pushKey","event","setState","key","document","addEventListener","this","removeEventListener","className","Component","ReactDOM","render","getElementById"],"mappings":"2MAMaA,EAAb,4MACEC,MAAyB,CACvBC,OAAQ,IAFZ,EAaEC,QAAU,SAACC,GACT,EAAKC,SAAS,CACZH,OAAQE,EAAME,OAfpB,uDAKE,WACEC,SAASC,iBAAiB,QAASC,KAAKN,WAN5C,kCASE,WACEI,SAASG,oBAAoB,QAASD,KAAKN,WAV/C,oBAmBE,WACE,IAAQD,EAAWO,KAAKR,MAAhBC,OAER,OAEE,aADA,CACA,OAAKS,UAAU,MAAf,SACE,mBAAGA,UAAU,eAAb,SACc,KAAXT,EAAgB,0BAAhB,mCAAwEA,EAAxE,aA1BX,GAAyBU,a,MCDzBC,IAASC,OACP,cAAC,EAAD,IACAP,SAASQ,eAAe,W","file":"static/js/main.806dbddc.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\ntype State = {\n  pushed: string;\n};\n\nexport class App extends Component<{}, State> {\n  state: Readonly<State> = {\n    pushed: '',\n  };\n\n  componentDidMount(): void {\n    document.addEventListener('keyup', this.pushKey);\n  }\n\n  componentWillUnmount(): void {\n    document.removeEventListener('keyup', this.pushKey);\n  }\n\n  pushKey = (event: KeyboardEvent) => {\n    this.setState({\n      pushed: event.key,\n    });\n  };\n\n  render(): React.ReactNode {\n    const { pushed } = this.state;\n\n    return (\n      // eslint-disable-next-line react/jsx-wrap-multilines\n      <div className=\"App\">\n        <p className=\"App__message\">\n          {pushed === '' ? 'Nothing was pressed yet' : `The last pressed key is [${pushed}]`}\n        </p>\n      </div>);\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nimport './index.scss';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}